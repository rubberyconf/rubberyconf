// protoc --go_out=plugins=grpc:.  ./rubberyconf.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: rubberyconf.proto

package grpcapipb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusType int32

const (
	StatusType_Success             StatusType = 0
	StatusType_BadRequest          StatusType = 1
	StatusType_InternalServerError StatusType = 2
	StatusType_NotFound            StatusType = 3
)

// Enum value maps for StatusType.
var (
	StatusType_name = map[int32]string{
		0: "Success",
		1: "BadRequest",
		2: "InternalServerError",
		3: "NotFound",
	}
	StatusType_value = map[string]int32{
		"Success":             0,
		"BadRequest":          1,
		"InternalServerError": 2,
		"NotFound":            3,
	}
)

func (x StatusType) Enum() *StatusType {
	p := new(StatusType)
	*p = x
	return p
}

func (x StatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_rubberyconf_proto_enumTypes[0].Descriptor()
}

func (StatusType) Type() protoreflect.EnumType {
	return &file_rubberyconf_proto_enumTypes[0]
}

func (x StatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusType.Descriptor instead.
func (StatusType) EnumDescriptor() ([]byte, []int) {
	return file_rubberyconf_proto_rawDescGZIP(), []int{0}
}

type FeatureIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureName string `protobuf:"bytes,1,opt,name=featureName,proto3" json:"featureName,omitempty"`
}

func (x *FeatureIdRequest) Reset() {
	*x = FeatureIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubberyconf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureIdRequest) ProtoMessage() {}

func (x *FeatureIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rubberyconf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureIdRequest.ProtoReflect.Descriptor instead.
func (*FeatureIdRequest) Descriptor() ([]byte, []int) {
	return file_rubberyconf_proto_rawDescGZIP(), []int{0}
}

func (x *FeatureIdRequest) GetFeatureName() string {
	if x != nil {
		return x.FeatureName
	}
	return ""
}

type FeatureCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Default *FeatureCreationRequestDefaultCls `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *FeatureCreationRequest) Reset() {
	*x = FeatureCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubberyconf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureCreationRequest) ProtoMessage() {}

func (x *FeatureCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rubberyconf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureCreationRequest.ProtoReflect.Descriptor instead.
func (*FeatureCreationRequest) Descriptor() ([]byte, []int) {
	return file_rubberyconf_proto_rawDescGZIP(), []int{1}
}

func (x *FeatureCreationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeatureCreationRequest) GetDefault() *FeatureCreationRequestDefaultCls {
	if x != nil {
		return x.Default
	}
	return nil
}

type FeatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status StatusType `protobuf:"varint,1,opt,name=status,proto3,enum=grpcapi.StatusType" json:"status,omitempty"`
}

func (x *FeatureResponse) Reset() {
	*x = FeatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubberyconf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureResponse) ProtoMessage() {}

func (x *FeatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rubberyconf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureResponse.ProtoReflect.Descriptor instead.
func (*FeatureResponse) Descriptor() ([]byte, []int) {
	return file_rubberyconf_proto_rawDescGZIP(), []int{2}
}

func (x *FeatureResponse) GetStatus() StatusType {
	if x != nil {
		return x.Status
	}
	return StatusType_Success
}

type FeatureFullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status StatusType `protobuf:"varint,1,opt,name=status,proto3,enum=grpcapi.StatusType" json:"status,omitempty"`
	Value  string     `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FeatureFullResponse) Reset() {
	*x = FeatureFullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubberyconf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureFullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureFullResponse) ProtoMessage() {}

func (x *FeatureFullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rubberyconf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureFullResponse.ProtoReflect.Descriptor instead.
func (*FeatureFullResponse) Descriptor() ([]byte, []int) {
	return file_rubberyconf_proto_rawDescGZIP(), []int{3}
}

func (x *FeatureFullResponse) GetStatus() StatusType {
	if x != nil {
		return x.Status
	}
	return StatusType_Success
}

func (x *FeatureFullResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FeatureCreationRequestValueCls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *FeatureCreationRequestValueCls) Reset() {
	*x = FeatureCreationRequestValueCls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubberyconf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureCreationRequestValueCls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureCreationRequestValueCls) ProtoMessage() {}

func (x *FeatureCreationRequestValueCls) ProtoReflect() protoreflect.Message {
	mi := &file_rubberyconf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureCreationRequestValueCls.ProtoReflect.Descriptor instead.
func (*FeatureCreationRequestValueCls) Descriptor() ([]byte, []int) {
	return file_rubberyconf_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FeatureCreationRequestValueCls) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *FeatureCreationRequestValueCls) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type FeatureCreationRequestDefaultCls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *FeatureCreationRequestValueCls `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FeatureCreationRequestDefaultCls) Reset() {
	*x = FeatureCreationRequestDefaultCls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubberyconf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureCreationRequestDefaultCls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureCreationRequestDefaultCls) ProtoMessage() {}

func (x *FeatureCreationRequestDefaultCls) ProtoReflect() protoreflect.Message {
	mi := &file_rubberyconf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureCreationRequestDefaultCls.ProtoReflect.Descriptor instead.
func (*FeatureCreationRequestDefaultCls) Descriptor() ([]byte, []int) {
	return file_rubberyconf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *FeatureCreationRequestDefaultCls) GetValue() *FeatureCreationRequestValueCls {
	if x != nil {
		return x.Value
	}
	return nil
}

type FeatureCreationRequestMetaCls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Tags        []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *FeatureCreationRequestMetaCls) Reset() {
	*x = FeatureCreationRequestMetaCls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubberyconf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureCreationRequestMetaCls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureCreationRequestMetaCls) ProtoMessage() {}

func (x *FeatureCreationRequestMetaCls) ProtoReflect() protoreflect.Message {
	mi := &file_rubberyconf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureCreationRequestMetaCls.ProtoReflect.Descriptor instead.
func (*FeatureCreationRequestMetaCls) Descriptor() ([]byte, []int) {
	return file_rubberyconf_proto_rawDescGZIP(), []int{1, 2}
}

func (x *FeatureCreationRequestMetaCls) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FeatureCreationRequestMetaCls) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_rubberyconf_proto protoreflect.FileDescriptor

var file_rubberyconf_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x75, 0x62, 0x62, 0x65, 0x72, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x22, 0x34, 0x0a, 0x10,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xb5, 0x02, 0x0a, 0x16, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x44, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x32, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x43, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x4c, 0x0a, 0x0a, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61,
	0x70, 0x69, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43,
	0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3f, 0x0a, 0x07, 0x6d, 0x65, 0x74,
	0x61, 0x43, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x3e, 0x0a, 0x0f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x58, 0x0a, 0x13, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x2a, 0x50, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x03, 0x32, 0xde, 0x01, 0x0a, 0x12, 0x72, 0x75, 0x62, 0x62, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x61, 0x70, 0x69, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rubberyconf_proto_rawDescOnce sync.Once
	file_rubberyconf_proto_rawDescData = file_rubberyconf_proto_rawDesc
)

func file_rubberyconf_proto_rawDescGZIP() []byte {
	file_rubberyconf_proto_rawDescOnce.Do(func() {
		file_rubberyconf_proto_rawDescData = protoimpl.X.CompressGZIP(file_rubberyconf_proto_rawDescData)
	})
	return file_rubberyconf_proto_rawDescData
}

var file_rubberyconf_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rubberyconf_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_rubberyconf_proto_goTypes = []interface{}{
	(StatusType)(0),                          // 0: grpcapi.StatusType
	(*FeatureIdRequest)(nil),                 // 1: grpcapi.featureIdRequest
	(*FeatureCreationRequest)(nil),           // 2: grpcapi.featureCreationRequest
	(*FeatureResponse)(nil),                  // 3: grpcapi.featureResponse
	(*FeatureFullResponse)(nil),              // 4: grpcapi.featureFullResponse
	(*FeatureCreationRequestValueCls)(nil),   // 5: grpcapi.featureCreationRequest.valueCls
	(*FeatureCreationRequestDefaultCls)(nil), // 6: grpcapi.featureCreationRequest.defaultCls
	(*FeatureCreationRequestMetaCls)(nil),    // 7: grpcapi.featureCreationRequest.metaCls
}
var file_rubberyconf_proto_depIdxs = []int32{
	6, // 0: grpcapi.featureCreationRequest.default:type_name -> grpcapi.featureCreationRequest.defaultCls
	0, // 1: grpcapi.featureResponse.status:type_name -> grpcapi.StatusType
	0, // 2: grpcapi.featureFullResponse.status:type_name -> grpcapi.StatusType
	5, // 3: grpcapi.featureCreationRequest.defaultCls.value:type_name -> grpcapi.featureCreationRequest.valueCls
	1, // 4: grpcapi.rubberyConfService.Get:input_type -> grpcapi.featureIdRequest
	2, // 5: grpcapi.rubberyConfService.Create:input_type -> grpcapi.featureCreationRequest
	1, // 6: grpcapi.rubberyConfService.Delete:input_type -> grpcapi.featureIdRequest
	4, // 7: grpcapi.rubberyConfService.Get:output_type -> grpcapi.featureFullResponse
	3, // 8: grpcapi.rubberyConfService.Create:output_type -> grpcapi.featureResponse
	3, // 9: grpcapi.rubberyConfService.Delete:output_type -> grpcapi.featureResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rubberyconf_proto_init() }
func file_rubberyconf_proto_init() {
	if File_rubberyconf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rubberyconf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubberyconf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubberyconf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubberyconf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureFullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubberyconf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureCreationRequestValueCls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubberyconf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureCreationRequestDefaultCls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubberyconf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureCreationRequestMetaCls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rubberyconf_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rubberyconf_proto_goTypes,
		DependencyIndexes: file_rubberyconf_proto_depIdxs,
		EnumInfos:         file_rubberyconf_proto_enumTypes,
		MessageInfos:      file_rubberyconf_proto_msgTypes,
	}.Build()
	File_rubberyconf_proto = out.File
	file_rubberyconf_proto_rawDesc = nil
	file_rubberyconf_proto_goTypes = nil
	file_rubberyconf_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RubberyConfServiceClient is the client API for RubberyConfService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RubberyConfServiceClient interface {
	Get(ctx context.Context, in *FeatureIdRequest, opts ...grpc.CallOption) (*FeatureFullResponse, error)
	Create(ctx context.Context, in *FeatureCreationRequest, opts ...grpc.CallOption) (*FeatureResponse, error)
	Delete(ctx context.Context, in *FeatureIdRequest, opts ...grpc.CallOption) (*FeatureResponse, error)
}

type rubberyConfServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRubberyConfServiceClient(cc grpc.ClientConnInterface) RubberyConfServiceClient {
	return &rubberyConfServiceClient{cc}
}

func (c *rubberyConfServiceClient) Get(ctx context.Context, in *FeatureIdRequest, opts ...grpc.CallOption) (*FeatureFullResponse, error) {
	out := new(FeatureFullResponse)
	err := c.cc.Invoke(ctx, "/grpcapi.rubberyConfService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rubberyConfServiceClient) Create(ctx context.Context, in *FeatureCreationRequest, opts ...grpc.CallOption) (*FeatureResponse, error) {
	out := new(FeatureResponse)
	err := c.cc.Invoke(ctx, "/grpcapi.rubberyConfService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rubberyConfServiceClient) Delete(ctx context.Context, in *FeatureIdRequest, opts ...grpc.CallOption) (*FeatureResponse, error) {
	out := new(FeatureResponse)
	err := c.cc.Invoke(ctx, "/grpcapi.rubberyConfService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RubberyConfServiceServer is the server API for RubberyConfService service.
type RubberyConfServiceServer interface {
	Get(context.Context, *FeatureIdRequest) (*FeatureFullResponse, error)
	Create(context.Context, *FeatureCreationRequest) (*FeatureResponse, error)
	Delete(context.Context, *FeatureIdRequest) (*FeatureResponse, error)
}

// UnimplementedRubberyConfServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRubberyConfServiceServer struct {
}

func (*UnimplementedRubberyConfServiceServer) Get(context.Context, *FeatureIdRequest) (*FeatureFullResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRubberyConfServiceServer) Create(context.Context, *FeatureCreationRequest) (*FeatureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRubberyConfServiceServer) Delete(context.Context, *FeatureIdRequest) (*FeatureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterRubberyConfServiceServer(s *grpc.Server, srv RubberyConfServiceServer) {
	s.RegisterService(&_RubberyConfService_serviceDesc, srv)
}

func _RubberyConfService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeatureIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RubberyConfServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.rubberyConfService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RubberyConfServiceServer).Get(ctx, req.(*FeatureIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RubberyConfService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeatureCreationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RubberyConfServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.rubberyConfService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RubberyConfServiceServer).Create(ctx, req.(*FeatureCreationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RubberyConfService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeatureIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RubberyConfServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.rubberyConfService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RubberyConfServiceServer).Delete(ctx, req.(*FeatureIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RubberyConfService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcapi.rubberyConfService",
	HandlerType: (*RubberyConfServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _RubberyConfService_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _RubberyConfService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _RubberyConfService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rubberyconf.proto",
}
